# Generated by Django 2.2 on 2019-04-25 11:00

from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='Ad Name')),
                ('script', models.TextField(blank=True, null=True, verbose_name='Ad Script')),
                ('location', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='Identifier')),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('content_attribution', models.CharField(blank=True, max_length=255, null=True)),
                ('thumbnail', django_resized.forms.ResizedImageField(blank=True, crop=['middle', 'center'], force_format=None, keep_meta=True, null=True, quality=0, size=[300, 180], upload_to='uploads/thumbnails/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssetAssociation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('template_location', models.CharField(blank=True, max_length=50, null=True)),
                ('asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='asset_assocaition', to='content_manager.Asset')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssetContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('identifier', models.CharField(max_length=255, verbose_name='Identifier')),
                ('content', models.FileField(blank=True, help_text='Video supported .mp4, .avi and .webm', null=True, upload_to='uploads', verbose_name='Asset Content')),
                ('alternate_text', models.CharField(blank=True, max_length=255, null=True, verbose_name='alternate_text')),
                ('order', models.IntegerField(blank=True, null=True)),
                ('start_time', models.IntegerField(default=0, help_text='In seconds not decimal values')),
                ('duration', models.IntegerField(default=5, help_text='In seconds ')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssetType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=20, verbose_name='Asset Type')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContentProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='Provider Name')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Provider Link')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Partner Name', max_length=100)),
                ('logo', models.URLField(blank=True, help_text='Partner Logo', null=True)),
                ('description', models.TextField(blank=True, help_text='Partner Description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TemplateContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('content_heading', models.CharField(help_text='Heading of Article', max_length=255, verbose_name='Article Heading')),
                ('content_subheading', models.CharField(blank=True, help_text='SubHeading of Article', max_length=255, verbose_name='Article Sub Heading')),
                ('content_url', models.URLField(blank=True, default='http://bainslabs.in', help_text='External Url', verbose_name='External URL')),
                ('content_byline', models.TextField(blank=True, default='Byline Goes here', verbose_name='Article Byline')),
                ('content_byline_link', models.TextField(blank=True, default='http://bainslabs.in/', verbose_name='Article Byline Link')),
                ('content_body', models.TextField(blank=True, default='article body', help_text='Article Body', verbose_name='Article Body')),
                ('content_synopsis', models.TextField(blank=True, default='article synopsis', help_text='Synopsis', null=True, verbose_name='Article Synopsis')),
                ('content_publish_date', models.DateTimeField(auto_now_add=True, help_text='Content Publish Date', verbose_name='Article Publish Date')),
                ('disable_ads', models.BooleanField(default=False)),
                ('content_received_date', models.DateTimeField(blank=True, help_text='Content Received Date', null=True, verbose_name='Article Received Date ')),
                ('search_keywords', models.TextField(blank=True, help_text='Search Keywords', null=True, verbose_name='Search Keywords')),
                ('search_boost', models.IntegerField(blank=True, default=0, help_text='Search Boost', null=True)),
                ('include_in_search', models.BooleanField(default=False, help_text='Searchable')),
                ('guid', models.CharField(blank=True, help_text='Canonical Link', max_length=255, null=True, verbose_name='Canonical Link')),
                ('seo_meta_name', models.CharField(blank=True, help_text='SEO Meta Information', max_length=100, null=True, verbose_name='Seo Meta Name')),
                ('seo_keywords', models.TextField(blank=True, help_text='SEO Keywords', null=True, verbose_name='Seo Keyword')),
                ('seo_meta_description', models.TextField(blank=True, help_text='SEO Description', null=True, verbose_name='Meta Description')),
                ('template', models.CharField(blank=True, choices=[('Editorial Template', 'Editorial Template'), ('Vehicle Editorial Template', 'Vehicle Editorial Template')], default='', help_text='Template type', max_length=255, null=True)),
                ('preview_path', models.CharField(blank=True, max_length=20, null=True)),
                ('is_timely_content', models.BooleanField(default=False, help_text='Expirable Content', verbose_name='Timely Content')),
                ('available_in_trends', models.BooleanField(default=False, help_text='Available in Trends', verbose_name='Available In Trends')),
                ('disable_personalization', models.BooleanField(default=False, help_text='Disable Personalization', verbose_name='Disable Personalisation')),
                ('is_promoted_content', models.BooleanField(default=False, help_text='Promoted Content', verbose_name='Promoted Content')),
                ('homepage_availability', models.BooleanField(default=False, help_text='Is Available on Homepage', verbose_name='Available On Homepage')),
                ('year', models.IntegerField(blank=True, help_text='Year', null=True, verbose_name='Year')),
                ('manufacturer', models.TextField(blank=True, help_text='Manufacturer', null=True, verbose_name='Manufacturer')),
                ('make', models.TextField(blank=True, help_text='Make', null=True, verbose_name='Make')),
                ('make_model', models.TextField(blank=True, help_text='Model Make', null=True, verbose_name='Make model')),
                ('likes', models.IntegerField(blank=True, default=0, help_text='Likes', null=True, verbose_name='likes')),
                ('views', models.IntegerField(blank=True, default=0, help_text='Views', null=True, verbose_name='views')),
                ('slug', models.SlugField(blank=True, help_text='Unique Slug', max_length=255, null=True, verbose_name='slug')),
                ('is_featured', models.BooleanField(default=False, help_text='Is Featured', verbose_name='Is Featured')),
                ('template_configuration', models.TextField(blank=True, help_text='Template Configuration', null=True, verbose_name='Template Configuration')),
                ('asset_template_association', models.ManyToManyField(blank=True, help_text='Asset Template Association', related_name='associated_asset', to='content_manager.AssetAssociation')),
                ('city', models.ForeignKey(blank=True, help_text='City', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='cities_available', to='core.City')),
                ('content_partners', models.ForeignKey(blank=True, help_text='Content Partner', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='content_manager.Partner')),
                ('content_provider', models.ForeignKey(blank=True, help_text='Content Provider', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='provided_by', to='content_manager.ContentProvider')),
                ('country', models.ForeignKey(blank=True, help_text='Country', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='countries_available', to='core.Country')),
                ('related_ads', models.ManyToManyField(blank=True, related_name='ads_related', to='content_manager.AdSection')),
                ('related_articles', models.ManyToManyField(blank=True, help_text='Similar Articles', related_name='article_similar', to='content_manager.TemplateContent')),
                ('secondary_navigation', models.ManyToManyField(blank=True, help_text='Secondary Navigation', related_name='secondary_related_articles', to='content_manager.TemplateContent')),
                ('state', models.ForeignKey(blank=True, help_text='State', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='states_available', to='core.State')),
            ],
            options={
                'verbose_name': 'Content For Template',
            },
        ),
        migrations.AddField(
            model_name='asset',
            name='asset_content',
            field=models.ManyToManyField(blank=True, related_name='asset_contents', to='content_manager.AssetContent'),
        ),
        migrations.AddField(
            model_name='asset',
            name='asset_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='content_manager.AssetType'),
        ),
    ]
